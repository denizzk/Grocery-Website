@model Grocery.Models.EntityFramework.Item

@{
    ViewBag.Title = "ProductForm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Product Form</h2>
@using (Html.BeginForm("Save", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-group">
            @Html.LabelFor(m => m.ImageUrl)
            &emsp;
            @Html.TextBoxFor(m => m.ImageUrl, new {@class="form-control", type = "file", name = "imageUrl", required="required" })
        </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Name)
        @Html.TextBoxFor(m => m.Name, new { @class = "form-control", placeholder = "Enter Product Name", required = "required" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Price)
        @Html.TextBoxFor(m => m.Price, new { @class = "form-control", type = "number", step = "0.01", min = "0.01", max = "999.99", placeholder = "Enter Product Price", required = "required" })
    </div>

    <div class="custom-radio">
        @Html.LabelFor(m => m.InStock, "Stock Status")
        &emsp;
        @Html.RadioButtonFor(m => m.InStock, true, new { @name = "InStock", required = "required" }) In Stock
        &emsp;
        @Html.RadioButtonFor(m => m.InStock, false, new { @name = "InStock" }) Out of Stock
    </div>

    <br />
    <div class="custom-radio">
        @Html.LabelFor(m => m.InStock, "Sale Unit")
        &emsp;
        @Html.RadioButtonFor(m => m.SaleWith, "kg", new { @name = "SaleWith", required = "required" }) kg
        &emsp;
        @Html.RadioButtonFor(m => m.SaleWith, "pcs", new { @name = "SaleWith" }) pcs
    </div>

    <br />
    @Html.HiddenFor(m => m.Id)
    <button type="submit" class="btn btn-primary">Save</button>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@*@section scripts
    {
        <script src="~/Scripts/jquery.validate.min.js"></script>
        <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    }*@